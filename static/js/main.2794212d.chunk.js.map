{"version":3,"sources":["components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","actions/type.js","components/contacts/Contact.js","actions/contactActions.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","reducers/contactReducer.js","reducers/index.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["Header","PropTypes","branding","string","isRequired","this","props","className","to","Component","About","NotFound","GET_CONTACTS","DELETE_CONTACT","ADD_CONTACT","GET_CONTACT","UPDATE_CONTACT","Contact","state","showContactInfo","onDeleteClick","id","deleteContact","contact","name","email","phone","style","cursor","paddingLeft","onClick","setState","float","color","bind","marginRight","connect","dispatch","a","axios","delete","type","payload","Contacts","getContacts","contacts","Fragment","map","get","res","data","TextInputGroup","label","value","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","e","target","onSubmit","preventDefault","newContact","addContact","history","push","post","EditContact","updtContact","match","params","updateContact","nextProps","nextState","getContact","put","initialState","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2794212d.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router-dom'\nclass Header extends Component {\n    PropTypes = {\n        branding: PropTypes.string.isRequired\n    };\n    render() {\n        const {branding} = this.props;\n        return(\n            <div>\n                <nav className = \"navbar navbar-expand-sm bg-dark navbar-dark\">\n                    <div className = \"container\">\n                        <Link className = \"navbar-brand\" to=\"/\">\n                            {branding}\n                        </Link>\n                        <ul className = \"navbar-nav\">\n                            <li className = \"nav-item\">\n                                <Link className = \"nav-link\" to=\"/\"><i className = \"fas fa-home pr-2\"/>Home</Link>\n                            </li>\n                            <li className = \"nav-item\">\n                                <Link className = \"nav-link\" to=\"/contactmanager_redux/contact/add\"><i className = \"fas fa-plus pr-2\"/>Add Contact</Link>\n                            </li>\n                            <li className = \"nav-item\">\n                                <Link className = \"nav-link\" to=\"/contactmanager_redux/about\"><i className = \"fas fa-question pr-2\"/>About Us</Link>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n            </div>\n        )\n    }\n}\n\nexport default Header;","import React from 'react'\n\nexport default function About() {\n    return (\n        <div>\n            <h1 className = \"display-4\"><span className = \"text-danger\">About</span> Contact Manager</h1>\n            <p className = \"lead\">Simple app to manage contacts</p>\n            <p className = \"text-secondary\">Version 1.0</p>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function NotFound() {\n    return (\n        <div>\n            <h1 className = \"display-4\"><span className = \"text-danger\">404</span> Page Not Found</h1>\n            <p className = \"lead\">Sorry, this page dosen't exist</p>\n        </div>\n    )\n}\n","export const GET_CONTACTS = 'GET_CONTACTS'\r\nexport const DELETE_CONTACT = 'DELETE_CONTACT'\r\nexport const ADD_CONTACT = 'ADD_CONTACT'\r\nexport const GET_CONTACT = 'GET_CONTACT'\r\nexport const UPDATE_CONTACT = 'UPDATE_CONTACT'","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n// import axios from 'axios'\nimport { Link } from 'react-router-dom';\nimport {connect} from 'react-redux'\nimport {deleteContact} from '../../actions/contactActions'\nclass Contact extends Component {\n    state = {\n        showContactInfo : false\n    };\n    onDeleteClick = (id) => {\n        this.props.deleteContact(id)\n    }\n    render() {\n        const {id,name,email,phone} = this.props.contact;\n        const {showContactInfo} = this.state;\n        return (\n                        <div className = \"card card-body mb-3\">\n                            <h4>{name} \n                                <i className=\"fas fa-sort-down\" \n                                    style = {{cursor: 'pointer',paddingLeft: '0.5rem'}} \n                                    onClick={() => {\n                                        this.setState({showContactInfo:!this.state.showContactInfo})\n                                    }}>\n                                </i>\n                                <i className = \"fas fa-times\" \n                                    style = {{cursor: 'pointer',float: 'right', color: 'red'}}\n                                    onClick = {this.onDeleteClick.bind(this,id)}\n                                />\n                                <Link to = {`contact/edit/${id}`}>\n                                    <i \n                                        className = \"fas fa-pencil-alt\"\n                                        style = {{cursor: 'pointer',float: 'right',color:'black',marginRight: '1rem'}}\n                                    />\n                                </Link>\n                            </h4>\n                            {showContactInfo? (\n                                <ul className = \"list-group\">\n                                    <li className = \"list-group-item\">Email: {email}</li>\n                                    <li className = \"list-group-item\">Phone: {phone}</li>\n                                </ul>\n                            ): null}\n                        </div>\n        )\n    }\n}\nContact.propTypes = {\n    contact: PropTypes.object.isRequired,\n    deleteContact: PropTypes.func.isRequired\n}\nexport default connect(null,{deleteContact})(Contact);","import axios from 'axios'\r\nimport { GET_CONTACTS } from './type'\r\nimport { DELETE_CONTACT } from './type'\r\nimport { ADD_CONTACT } from './type'\r\nimport { GET_CONTACT } from './type'\r\nimport { UPDATE_CONTACT } from './type'\r\nexport const getContacts = () => async dispatch =>{\r\n    const res = await axios.get('https://6078053be7f4f50017183934.mockapi.io/api/contacts')\r\n    dispatch({\r\n        type: GET_CONTACTS,\r\n        payload: res.data\r\n    })\r\n}\r\nexport const getContact = (id) => async dispatch =>{\r\n    const res = await axios.get(`https://6078053be7f4f50017183934.mockapi.io/api/contacts/${id}`)\r\n    dispatch({\r\n        type: GET_CONTACT,\r\n        payload: res.data\r\n    })\r\n}\r\nexport const deleteContact = (id) => async dispatch =>{\r\n    try{\r\n        await axios.delete(`https://6078053be7f4f50017183934.mockapi.io/api/contacts/${id}`)\r\n        dispatch({\r\n            type: DELETE_CONTACT,\r\n            payload: id\r\n        })\r\n    }catch (e) {\r\n        dispatch({\r\n            type: DELETE_CONTACT,\r\n            payload: id\r\n        })\r\n    }\r\n}\r\nexport const addContact = (contact) => async dispatch =>{\r\n    const res = await axios.post('https://6078053be7f4f50017183934.mockapi.io/api/contacts',contact)\r\n    dispatch({\r\n        type: ADD_CONTACT,\r\n        payload: res.data\r\n    })\r\n}\r\nexport const updateContact = (contact) => async dispatch =>{\r\n    const res = await axios.put(`https://6078053be7f4f50017183934.mockapi.io/api/contacts/${contact.id}`,contact)\r\n    dispatch({\r\n        type: UPDATE_CONTACT,\r\n        payload: res.data\r\n    })\r\n}","import React, { Component } from 'react'\nimport Contact from './Contact'\nimport {connect} from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { getContacts } from '../../actions/contactActions'\nclass Contacts extends Component {\n    componentDidMount(){\n        this.props.getContacts();\n    }\n    render() {\n        const {contacts} = this.props;\n        return(\n            <React.Fragment>\n                <h1 className = \"display-4 mb-2\"><span className = \"text-danger\">Contact</span> List</h1>\n                {contacts.map(contact =>\n                    <Contact \n                        key = {contact.id} \n                        contact = {contact}\n                    />    \n                )}\n            </React.Fragment>\n        )\n    }\n}\nContacts.propTypes = {\n    contacts: PropTypes.array.isRequired,\n    getContacts: PropTypes.func.isRequired\n}\nconst mapStateToProps = (state) => ({\n    contacts: state.contact.contacts\n})\nexport default connect(mapStateToProps,{getContacts})(Contacts);","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nconst TextInputGroup = ({\n    label,\n    name,\n    value,\n    placeholder,\n    type,\n    onChange,\n    error\n}) => {\n    return (\n        <div className = \"form-group\">\n            <label htmlFor = {name}>{label}</label>\n                <input \n                    type = {type}\n                    name = {name}\n                    className = {classnames('form-control form-control-lg',{\n                        'is-invalid' : error\n                    })}\n                    placeholder = {placeholder}\n                    value = {value}\n                    onChange = {onChange}\n                />\n                {error && <div className = \"invalid-feedback\">{error}</div>}\n        </div>\n    )\n}\nTextInputGroup.propTypes = {\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired\n}\nTextInputGroup.defaultProps = {\n    type : 'text'\n}\nexport default TextInputGroup;","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {addContact} from '../../actions/contactActions'\n//import {v1 as uuid} from \"uuid\"; \nimport TextInputGroup from '../layout/TextInputGroup'\nclass AddContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        error: {}\n    }\n    onChange = (e) => this.setState({[e.target.name]: e.target.value}); \n    onSubmit = (e) => {\n        e.preventDefault();\n        const {name,email,phone} = this.state;\n        //Check valid input\n        if(name === ''){\n            this.setState({error: {name: 'Name is required'}})\n            return\n        }\n        if(email === ''){\n            this.setState({error: {email: 'Email is required'}})\n            return\n        }\n        if(phone === ''){\n            this.setState({error: {phone: 'Phone is required'}})\n            return\n        }\n        const newContact = {\n            name,\n            email,\n            phone,\n        }\n        this.props.addContact(newContact)\n        //Clear state\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            error: {}\n        })\n        this.props.history.push('/')\n    };\n    render() {\n        const {name, email, phone, error} = this.state;\n        return(\n                        <div className = \"card mb-3\">\n                            <div className = \"card-header display-4\"><span className = \"text-danger\">Add</span> Contact</div>\n                            <div className = \"card-body\">\n                                <form onSubmit = {this.onSubmit.bind(this)}>\n                                    <TextInputGroup\n                                        label = \"Name\"\n                                        name = \"name\"\n                                        placeholder = \"Enter Name\"\n                                        value = {name}\n                                        onChange = {this.onChange}\n                                        error = {error.name}\n                                    />\n                                    <TextInputGroup\n                                        label = \"Email\"\n                                        name = \"email\"\n                                        type = \"email\"\n                                        placeholder = \"Enter Email\"\n                                        value = {email}\n                                        onChange = {this.onChange}\n                                        error = {error.email}\n                                    />\n                                    <TextInputGroup\n                                        label = \"Phone\"\n                                        name = \"phone\"\n                                        type = \"phone\"\n                                        placeholder = \"Enter Phone\"\n                                        value = {phone}\n                                        onChange = {this.onChange}\n                                        error = {error.phone}\n                                    />\n                                    <button \n                                        type=\"submit\" \n                                        className=\"btn btn-primary\">Add Contact\n                                    </button>\n                                </form>\n                            </div>\n                        </div>\n            \n        )\n    }\n}\nAddContact.propTypes = {\n    addContact: PropTypes.func.isRequired\n}\nexport default connect(null,{addContact})(AddContact);\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {updateContact,getContact} from '../../actions/contactActions'\nimport TextInputGroup from '../layout/TextInputGroup'\nclass EditContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        error: {}\n    }\n    componentWillReceiveProps(nextProps,nextState){\n        const {name,email,phone} = nextProps.contact\n        this.setState({\n            name,\n            email,\n            phone\n        })\n    }\n    async componentDidMount(){\n        const {id} = this.props.match.params;\n        this.props.getContact(id)\n    }\n    onChange = (e) => this.setState({[e.target.name]: e.target.value}); \n    onSubmit = (e) => {\n        e.preventDefault();\n        const {name,email,phone} = this.state;\n        //Check valid input\n        if(name === ''){\n            this.setState({error: {name: 'Name is required'}})\n            return\n        }\n        if(email === ''){\n            this.setState({error: {email: 'Email is required'}})\n            return\n        }\n        if(phone === ''){\n            this.setState({error: {phone: 'Phone is required'}})\n            return\n        }\n        const {id} = this.props.match.params;\n        const updtContact = {\n            id,\n            name,\n            email,\n            phone\n        }\n        this.props.updateContact(updtContact);\n        //Clear state\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            error: {}\n        })\n        this.props.history.push('/')\n    };\n    render() {\n        const {name, email, phone, error} = this.state;\n        return(\n            \n                        <div className = \"card mb-3\">\n                            <div className = \"card-header display-4\"><span className = \"text-danger\">Edit</span> Contact</div>\n                            <div className = \"card-body\">\n                                <form onSubmit = {this.onSubmit.bind(this)}>\n                                    <TextInputGroup\n                                        label = \"Name\"\n                                        name = \"name\"\n                                        placeholder = \"Enter Name\"\n                                        value = {name}\n                                        onChange = {this.onChange}\n                                        error = {error.name}\n                                    />\n                                    <TextInputGroup\n                                        label = \"Email\"\n                                        name = \"email\"\n                                        type = \"email\"\n                                        placeholder = \"Enter Email\"\n                                        value = {email}\n                                        onChange = {this.onChange}\n                                        error = {error.email}\n                                    />\n                                    <TextInputGroup\n                                        label = \"Phone\"\n                                        name = \"phone\"\n                                        type = \"phone\"\n                                        placeholder = \"Enter Phone\"\n                                        value = {phone}\n                                        onChange = {this.onChange}\n                                        error = {error.phone}\n                                    />\n                                    <button \n                                        type=\"submit\" \n                                        className=\"btn btn-primary\">Update Contact\n                                    </button>\n                                </form>\n                            </div>\n                        </div>\n        )\n    }\n}\nEditContact.propTypes = {\n    contact: PropTypes.object.isRequired,\n    getContact: PropTypes.func.isRequired\n}\nconst mapStateToProps = (state) =>({\n    contact: state.contact.contact\n})\nexport default connect(mapStateToProps,{getContact,updateContact})(EditContact);\n","import {GET_CONTACTS, DELETE_CONTACT, ADD_CONTACT,GET_CONTACT,UPDATE_CONTACT} from '../actions/type'\r\nconst initialState = {\r\n    contacts: [],\r\n    contact: {}\r\n}\r\n// eslint-disable-next-line\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_CONTACTS:\r\n            return{\r\n                ...state,\r\n                contacts: action.payload\r\n            }\r\n        case GET_CONTACT:\r\n            return{\r\n                ...state,\r\n                contact: action.payload\r\n            }\r\n        case DELETE_CONTACT:\r\n            return{\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => \r\n                    contact.id !== action.payload.id\r\n                )\r\n            }\r\n        case ADD_CONTACT:\r\n            return{\r\n                ...state,\r\n                contacts: [action.payload,...state.contacts]\r\n            }\r\n        case UPDATE_CONTACT:\r\n            return{\r\n                ...state,\r\n                contacts: state.contacts.map(contact =>\r\n                    contact.id === action.payload.id ? (contact = action.payload): contact\r\n                )\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport contactReducer from './contactReducer'\r\nexport default combineReducers({\r\n    contact: contactReducer\r\n})","import {createStore,applyMiddleware,compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(rootReducer,initialState,compose(applyMiddleware(...middleware),\r\nwindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n))\r\nexport default store;","import './App.css';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/fontawesome.min.css';\nimport '@fortawesome/fontawesome-free/js/fontawesome.min.js';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport {Provider} from 'react-redux';\nimport store from './store'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Provider store = {store}>\n      <Router>\n        <div className=\"App\">\n          <Header branding = \"Contact Manager\"/>\n          <div className = \"container mt-2\">\n            <Switch>\n              <Route exact path = \"/\" component = {Contacts}/>\n              <Route exact path = \"/contactmanager_redux\" component = {Contacts}/>\n              <Route exact path = \"/contactmanager_redux/about\" component = {About}/>\n              <Route exact path = \"/contactmanager_redux/contact/add\" component = {AddContact}/>\n              <Route exact path = \"/contactmanager_redux/contact/edit/:id\" component = {EditContact}/>\n              <Route component = {NotFound}/>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}